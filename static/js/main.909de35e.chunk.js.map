{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.jsx","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","handleChange","event","target","name","value","setState","addMovie","this","props","onSubmit","preventDefault","htmlFor","id","type","placeholder","onChange","onClick","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"6xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCtBGK,G,MAAb,4MACEC,MAAQ,CACNhB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,IANZ,EASEG,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MAEd,EAAKC,SAAL,eAAiBF,EAAOC,KAZ5B,uDAeY,IAAD,OACCE,EAAaC,KAAKC,MAAlBF,SAER,OACE,0BACEG,SAAU,SAACR,GACTA,EAAMS,mBAGR,2BAAOC,QAAQ,SAAf,iBAEE,2BACEC,GAAG,QACHT,KAAK,QACLU,KAAK,OACLC,YAAY,QACZV,MAAOG,KAAKR,MAAMhB,MAClBgC,SAAUR,KAAKP,gBAGnB,6DAEE,2BACEG,KAAK,cACLU,KAAK,OACLC,YAAY,cACZV,MAAOG,KAAKR,MAAMf,YAClB+B,SAAUR,KAAKP,gBAGnB,wDAEE,2BACEG,KAAK,SACLU,KAAK,OACLC,YAAY,SACZV,MAAOG,KAAKR,MAAMd,OAClB8B,SAAUR,KAAKP,gBAGnB,yDAEE,2BACEG,KAAK,UACLU,KAAK,OACLC,YAAY,UACZV,MAAOG,KAAKR,MAAMb,QAClB6B,SAAUR,KAAKP,gBAGnB,wDAEE,2BACEG,KAAK,SACLU,KAAK,OACLC,YAAY,SACZV,MAAOG,KAAKR,MAAMF,OAClBkB,SAAUR,KAAKP,gBAGnB,2BACEa,KAAK,SACLG,QAAS,WACPV,EAAS,EAAKP,OACd,EAAKM,SAAS,CACZtB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,MAGZO,MAAM,uBAvFhB,GAA8Ba,c,OCEjBC,EAAb,4MACEnB,MAAQ,CACNN,OAAQ0B,GAFZ,EAKEb,SAAW,SAACX,GAAW,IACbZ,EAAgDY,EAAhDZ,MAAOC,EAAyCW,EAAzCX,YAAaC,EAA4BU,EAA5BV,OAAQC,EAAoBS,EAApBT,QAASW,EAAWF,EAAXE,OAE7C,EAAKQ,UAAS,SAAAN,GAAK,MAAK,CAAEN,OAAO,GAAD,mBAAMM,EAAMN,QAAZ,CAAoB,CAClDV,QACAC,cACAC,SACAC,UACAW,iBAbN,uDAiBY,IACAJ,EAAWc,KAAKR,MAAhBN,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUmB,SAAUC,KAAKD,iBA1BnC,GAAyBW,aCDzBG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.909de35e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  render() {\n    const { addMovie } = this.props;\n\n    return (\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n        }}\n      >\n        <label htmlFor=\"title\">\n          Name for title\n          <input\n            id=\"title\"\n            name=\"title\"\n            type=\"text\"\n            placeholder=\"title\"\n            value={this.state.title}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Write description for movie\n          <input\n            name=\"description\"\n            type=\"text\"\n            placeholder=\"description\"\n            value={this.state.description}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Write imgUrl for movie\n          <input\n            name=\"imgUrl\"\n            type=\"text\"\n            placeholder=\"imgUrl\"\n            value={this.state.imgUrl}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Write imdbUrl for movie\n          <input\n            name=\"imdbUrl\"\n            type=\"text\"\n            placeholder=\"imdbUrl\"\n            value={this.state.imdbUrl}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label>\n          Write imdbId for movie\n          <input\n            name=\"imdbId\"\n            type=\"text\"\n            placeholder=\"imdbId\"\n            value={this.state.imdbId}\n            onChange={this.handleChange}\n          />\n        </label>\n        <input\n          type=\"submit\"\n          onClick={() => {\n            addMovie(this.state);\n            this.setState({\n              title: '',\n              description: '',\n              imgUrl: '',\n              imdbUrl: '',\n              imdbId: '',\n            });\n          }}\n          value=\"Add new movie\"\n        />\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    const { title, description, imgUrl, imdbUrl, imdbId } = movie;\n\n    this.setState(state => ({ movies: [...state.movies, {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    }] }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}